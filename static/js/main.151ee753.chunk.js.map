{"version":3,"sources":["store/actions/actionTypes.js","store/actions/todos.js","components/UI/Icons/DownChevron/DownChevron.js","components/TodoInput/TodoInput.js","components/UI/Icons/Checkbox/Checkbox.js","components/UI/Icons/DeleteIcon/DeleteIcon.js","components/Todo/Todo.js","components/Title/Title.js","components/InfoPanel/ItemsLeft/ItemsLeft.js","components/UI/Button/Button.js","components/InfoPanel/TodoFilters/Filter/Filter.js","components/InfoPanel/TodoFilters/TodoFilters.js","components/InfoPanel/ClearCompleted/ClearCompleted.js","components/InfoPanel/InfoPanel.js","components/UI/Spinner/Spinner.js","components/TodoDashboard/TodoDashboard.js","containers/Todos/Todos.js","App.js","shared/updateObject.js","store/reducers/todos.js","store/store.js","reportWebVitals.js","index.js"],"names":["UPDATE_TODO","DELETE_TODO","ADD_NEW_TODO_TO_LIST","FETCH_TODOS_START","FETCH_TODOS_SUCCESS","FETCH_TODOS_FAIL","addNewTodoToList","todo","type","actionType","updateTodo","updatedTodo","dispatch","a","axios","put","id","console","log","downChevron","classProp","clicked","className","icon","faChevronDown","onClick","todoInput","props","onSubmit","onAddTodo","DownChevron","onToggleAllCheckboxes","name","value","placeholder","editingTodoList","onChange","onInputChanged","disabled","checkbox","checked","changed","deleteIcon","faTimes","strikeThroughStyle","todoCompleted","textDecoration","textDisplay","editing","style","content","onEditTodo","onSubmitEdit","defaultValue","editedContent","DeleteIcon","onDeleteTodo","Checkbox","onUpdateTodo","title","titleText","itemsLeft","todos","filter","isDone","length","button","children","Button","todoFilters","filterOptions","filters","map","Filter","activeFilter","onSelectFilterOption","clearCompleted","infoPanel","ItemsLeft","TodoFilters","ClearCompleted","onClearCompletedTodos","spinner","connect","state","loading","todoList","Spinner","test","filteredTodos","filteredTodo","Todo","e","InfoPanel","TodoInput","Title","Todos","checkboxBoolean","inputChangedHandler","target","setState","addTodoHandler","preventDefault","newTodo","addTodo","editTodoHandler","setTodoEditState","updateFilteredTodosHandler","submitEditHandler","newContent","updateTodoHandler","clearCompletedTodos","forEach","deleteTodo","deleteTodoHandler","selectFilterOptionHandler","toggleAllCheckboxesHandler","updatedTodos","updateTodoList","this","fetchTodos","TodoDashboard","onUpdateFilteredTodos","React","Component","mapDispatchToProps","get","response","data","fetchedTodos","post","delete","updatedList","App","updateObject","oldObject","updatedProperties","initialState","error","action","updatedTodoList","fetchTodosStart","fetchTodosSuccess","fetchTodosFail","todoReducer","reducer","combineReducers","middleware","thunk","store","createStore","compose","applyMiddleware","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","app","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.151ee753.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\nexport const UPDATE_TODO = \"UPDATE_TODO\";\nexport const DELETE_TODO = \"DELETE_TODO\";\nexport const UPDATE_TODO_LIST = \"UPDATE_TODO_LIST\";\nexport const ADD_NEW_TODO_TO_LIST = \"ADD_NEW_TODO_TO_LIST\";\n\nexport const FETCH_TODOS = \"FETCH_TODOS\";\nexport const FETCH_TODOS_START = \"FETCH_TODOS_START\";\nexport const FETCH_TODOS_SUCCESS = \"FETCH_TODOS_SUCCESS\";\nexport const FETCH_TODOS_FAIL = \"FETCH_TODOS_FAIL\";","import * as actionType from \"./actionTypes\";\nimport axios from \"axios\";\n\nexport const addTodo = (newTodo) => {\n  return async (dispatch) => {\n    try {\n      const response = await axios.post(\n        \"https://halo-todo-backend.herokuapp.com/todos\",\n        newTodo\n      );\n\n      dispatch(addNewTodoToList({ ...response.data, editing: false }));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addNewTodoToList = (todo) => ({\n  type: actionType.ADD_NEW_TODO_TO_LIST,\n  todo: todo,\n});\n\nexport const deleteTodo = (id) => {\n  return async (dispatch) => {\n    try {\n      await axios.delete(`https://halo-todo-backend.herokuapp.com/todos/${id}`);\n      await dispatch({\n        type: actionType.DELETE_TODO,\n        id: id,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateTodo = (updatedTodo) => {\n  return async (dispatch) => {\n    try {\n      await axios.put(\n        `https://halo-todo-backend.herokuapp.com/todos/${updatedTodo.id}`,\n        updatedTodo\n      );\n      await dispatch({\n        type: actionType.UPDATE_TODO,\n        updatedTodo: updatedTodo,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateTodoList = (updatedList) => {\n  return async (dispatch) => {\n    try {\n      await updatedList.forEach((todo) => dispatch(updateTodo(todo)));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const setTodoEditState = (todo) => {\n  return async (dispatch) => {\n    try {\n      const updatedTodo = await { ...todo, editing: true };\n      await dispatch({\n        type: actionType.UPDATE_TODO,\n        updatedTodo: updatedTodo,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchTodosStart = () => ({\n  type: actionType.FETCH_TODOS_START,\n});\n\nexport const fetchTodosSuccess = (todos) => ({\n  type: actionType.FETCH_TODOS_SUCCESS,\n  todos: todos,\n});\n\nexport const fetchTodosFail = (error) => ({\n  type: actionType.FETCH_TODOS_FAIL,\n  error: error,\n});\n\nexport const fetchTodos = () => {\n  return async (dispatch) => {\n    try {\n      await dispatch(fetchTodosStart());\n      const response = await axios.get(\n        \"https://halo-todo-backend.herokuapp.com/todos\"\n      );\n      const fetchedTodos = await response.data.map((todo) => ({\n        ...todo,\n        editing: false,\n      }));\n      await dispatch(fetchTodosSuccess(fetchedTodos));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\n\nconst downChevron = ({classProp, clicked}) => (\n  <FontAwesomeIcon className={classProp} icon={faChevronDown} onClick={clicked} />\n)\n\nexport default downChevron;","import React from \"react\";\nimport DownChevron from \"../UI/Icons/DownChevron/DownChevron\";\n\nconst todoInput = (props) => (\n  <form className=\"todo-input\" onSubmit={props.onAddTodo}>\n    <DownChevron\n      classProp=\"todo-input__icon\"\n      clicked={props.onToggleAllCheckboxes}\n    />\n    <input\n      className=\"todo-input__input\"\n      type={props.type}\n      name={props.name}\n      value={props.todoInput}\n      placeholder={\n        props.editingTodoList ? \"Press Enter to Save Edit\" : props.placeholder\n      }\n      onChange={props.onInputChanged}\n      disabled={props.editingTodoList}\n    />\n  </form>\n);\n\nexport default todoInput;\n","import React from \"react\";\n\nconst checkbox = ({ classProp, checked, clicked, changed, disabled }) => (\n  <input\n    className={classProp}\n    type=\"checkbox\"\n    name=\"checkbox\"\n    checked={checked}\n    onClick={clicked}\n    onChange={changed}\n    disabled={disabled}\n  />\n);\n\nexport default checkbox;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst deleteIcon = ({ classProp, clicked}) => (\n  <FontAwesomeIcon\n    className={classProp}\n    icon={faTimes}\n    onClick={clicked}\n  />\n);\n\nexport default deleteIcon;\n","import React from \"react\";\nimport Checkbox from \"../UI/Icons/Checkbox/Checkbox\";\nimport DeleteIcon from \"../UI/Icons/DeleteIcon/DeleteIcon\";\n\nconst todo = (props) => {\n  let strikeThroughStyle = {};\n  if (props.todoCompleted) {\n    strikeThroughStyle = {\n      textDecoration: \"line-through\",\n    };\n  }\n\n  let textDisplay = (\n    <h2\n      className={\n        !props.editing && props.editingTodoList\n          ? \"todo__title--disabled\"\n          : \"todo__title\"\n      }\n      style={strikeThroughStyle}\n      name={props.content}\n      onClick={!props.editingTodoList ? props.onEditTodo : null}\n    >\n      {props.content}\n    </h2>\n  );\n\n  if (props.editing) {\n    textDisplay = (\n      <form className=\"todo__form\" onSubmit={props.onSubmitEdit}>\n        <input\n          className=\"todo__edit\"\n          name=\"editedContent\"\n          defaultValue={props.editedContent}\n          onChange={props.onInputChanged}\n        />\n      </form>\n    );\n  }\n\n  let deleteIcon = null;\n  if (!props.editing) {\n    deleteIcon = (\n      <DeleteIcon classProp=\"todo__icon\" clicked={props.onDeleteTodo} />\n    );\n  }\n\n  let checkbox = (\n    <Checkbox\n      classProp=\"todo__checkbox\"\n      checked={props.todoCompleted}\n      clicked={props.onUpdateTodo}\n      changed={props.onInputChanged}\n      disabled={!props.editing && props.editingTodoList}\n    />\n  );\n\n  return (\n    <section\n      className={\n        !props.editing && props.editingTodoList ? \"todo--disabled\" : \"todo\"\n      }\n    >\n      {checkbox}\n      {textDisplay}\n      {deleteIcon}\n    </section>\n  );\n};\n\nexport default todo;\n","import React from \"react\";\n\nconst title = ({ classProp, titleText }) => (\n  <h1 className={classProp}>{titleText}</h1>\n);\n\nexport default title;\n","import React from \"react\";\n\nconst itemsLeft = (props) => {\n  const calculateItemsLeft = () => {\n    const filteredItems = props.todos.filter(\n      (todo) => todo.isDone === false\n    );\n    const itemsLeftCount = filteredItems.length;\n    return itemsLeftCount;\n  };\n\n  return <div className=\"items-left\">{calculateItemsLeft()} Items Left</div>;\n};\n\nexport default itemsLeft;\n","import React from \"react\";\n\nconst button = (props) => (\n  <button\n    className={props.classProp}\n    type={props.type}\n    onClick={props.clicked}\n    disabled={props.disabled}\n  >\n    {props.children}\n  </button>\n);\n\nexport default button;\n","import React from \"react\";\nimport Button from \"../../../UI/Button/Button\";\n\nconst filter = (props) => (\n  <Button\n    classProp={props.classProp}\n    type={props.type}\n    clicked={props.clicked}\n    disabled={props.disabled}\n  >\n    {props.children}\n  </Button>\n);\n\nexport default filter;\n","import React from \"react\";\nimport Filter from \"./Filter/Filter\";\n\nconst todoFilters = (props) => {\n  const filterOptions = props.filters.map((filter) => (\n    <Filter\n      key={filter}\n      classProp={\n        filter === props.activeFilter\n          ? \"todo-filters__filter--active\"\n          : \"todo-filters__filter\"\n      }\n      type=\"text\"\n      clicked={() => props.onSelectFilterOption(filter)}\n    >\n      {filter}\n    </Filter>\n  ));\n\n  return <section className=\"todo-filters\">{filterOptions}</section>;\n};\n\nexport default todoFilters;\n","import React from \"react\";\n\nconst clearCompleted = (props) => (\n  <div className=\"clear-completed\" onClick={props.clicked}>\n    Clear Completed\n  </div>\n);\n\nexport default clearCompleted;\n","import React from \"react\";\nimport ItemsLeft from \"./ItemsLeft/ItemsLeft\";\nimport TodoFilters from \"./TodoFilters/TodoFilters\";\nimport ClearCompleted from \"./ClearCompleted/ClearCompleted\";\n\nconst infoPanel = (props) => (\n  <section className=\"info-panel\">\n    <ItemsLeft todos={props.todos} />\n    <TodoFilters\n      filters={props.filters}\n      activeFilter={props.activeFilter}\n      onSelectFilterOption={props.onSelectFilterOption}\n    />\n    <ClearCompleted clicked={props.onClearCompletedTodos} />\n  </section>\n);\n\nexport default infoPanel;\n","import React from \"react\";\n\nconst spinner = () => (\n  <div className=\"spinner\">\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n);\n\nexport default spinner;\n","import React from \"react\";\nimport TodoInput from \"../TodoInput/TodoInput\";\nimport Todo from \"../Todo/Todo\";\nimport Title from \"../Title/Title\";\nimport InfoPanel from \"../InfoPanel/InfoPanel\";\nimport Spinner from \"../UI/Spinner/Spinner\";\n\nimport { connect } from \"react-redux\";\n\nconst todoDashboard = (props) => {\n  let todoList = <Spinner />;\n  let infoPanel = null;\n\n  if (!props.loading) {\n    const test =\n      props.filteredTodos &&\n      props.filteredTodos.filter((filteredTodo) =>\n        props.todos.filter((todo) => filteredTodo.id === todo.id)\n      );\n\n    console.log(test);\n\n    props.filteredTodos && !props.editingTodoList\n      ? (todoList = test)\n      : (todoList = props.todos);\n\n    todoList = todoList.map((todo) => (\n      <Todo\n        key={todo.id}\n        content={todo.content}\n        todoCompleted={todo.isDone}\n        editing={todo.editing}\n        editedContent={props.editedContent}\n        editingTodoList={props.editingTodoList}\n        onUpdateTodo={() => props.onUpdateTodo(todo)}\n        onDeleteTodo={() => props.onDeleteTodo(todo.id)}\n        onEditTodo={() => props.onEditTodo(todo)}\n        onInputChanged={props.onInputChanged}\n        onSubmitEdit={(e) => props.onSubmitEdit(e, todo)}\n      />\n    ));\n  }\n\n  if (props.todos.length > 0) {\n    infoPanel = (\n      <InfoPanel\n        todos={props.todos}\n        filters={props.filters}\n        activeFilter={props.activeFilter}\n        onClearCompletedTodos={props.onClearCompletedTodos}\n        onSelectFilterOption={props.onSelectFilterOption}\n      />\n    );\n  }\n\n  let todoInput = (\n    <TodoInput\n      type=\"text\"\n      name=\"todoInput\"\n      placeholder=\"What needs to be done?\"\n      editingTodoList={props.editingTodoList}\n      todoInput={props.todoInput}\n      onAddTodo={props.onAddTodo}\n      onInputChanged={props.onInputChanged}\n      onToggleAllCheckboxes={props.onToggleAllCheckboxes}\n    />\n  );\n\n  return (\n    <main className=\"todo-dashboard\">\n      <Title classProp=\"todo-dashboard__title\" titleText=\"todos\" />\n      <section className=\"todo-dashboard__section\">\n        {todoInput}\n        {todoList}\n        {infoPanel}\n      </section>\n    </main>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  loading: state.todos.loading,\n});\n\nexport default connect(mapStateToProps)(todoDashboard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  fetchTodos,\n  addTodo,\n  updateTodo,\n  deleteTodo,\n  setTodoEditState,\n  updateTodoList,\n} from \"../../store/actions/index\";\nimport TodoDashboard from \"../../components/TodoDashboard/TodoDashboard\";\n\nclass Todos extends React.Component {\n  state = {\n    todoInput: \"\",\n    editedContent: \"\",\n    editingTodoList: false,\n    itemsLeft: 0,\n    filters: [\"All\", \"Active\", \"Completed\"],\n    filteredTodos: null,\n    activeFilter: \"All\",\n    checkboxBoolean: false,\n    checkbox: \"\",\n  };\n\n  inputChangedHandler = (e) => {\n    const target = e.target;\n    const name = target.name;\n    this.setState({ [name]: e.target.value });\n  };\n\n  addTodoHandler = (e) => {\n    e.preventDefault();\n    const newTodo = {\n      content: this.state.todoInput,\n      isDone: false,\n    };\n    this.setState(\n      {\n        todoInput: \"\",\n      },\n      () => this.props.addTodo(newTodo)\n    );\n  };\n\n  editTodoHandler = (todo) => {\n    if (todo.editing === false) {\n      this.setState(\n        {\n          editedContent: todo.content,\n          editingTodoList: true,\n          activeFilter: \"All\",\n        },\n        () => this.props.setTodoEditState(todo)\n      );\n      this.updateFilteredTodosHandler();\n    }\n  };\n\n  submitEditHandler = (e, todo) => {\n    e.preventDefault();\n    const newContent = this.state.editedContent;\n    const updatedTodo = { ...todo, content: newContent, editing: false };\n    this.setState(\n      {\n        editingTodoList: false,\n        activeFilter: \"All\"\n      },\n      () => this.props.updateTodo(updatedTodo)\n    );\n  };\n\n  updateTodoHandler = async (todo) => {\n    let updatedTodo = null;\n    if (todo.isDone) {\n      updatedTodo = { ...todo, isDone: false };\n    } else {\n      updatedTodo = { ...todo, isDone: true };\n    }\n    await this.props.updateTodo(updatedTodo);\n    this.updateFilteredTodosHandler();\n  };\n\n  clearCompletedTodos = () => {\n    const filteredTodos = this.props.todos.filter(\n      (todo) => todo.isDone === true\n    );\n    filteredTodos.forEach((todo) => this.props.deleteTodo(todo.id));\n  };\n\n  deleteTodoHandler = (id) => {\n    this.props.deleteTodo(id);\n  };\n\n  updateFilteredTodosHandler = () => {\n    let filteredTodos = null;\n    if (this.state.activeFilter === \"Active\") {\n      filteredTodos = this.props.todos.filter((todo) => todo.isDone === false);\n      this.setState({\n        filteredTodos: filteredTodos,\n      });\n    }\n\n    if (this.state.activeFilter === \"Completed\") {\n      filteredTodos = this.props.todos.filter((todo) => todo.isDone === true);\n      this.setState({\n        filteredTodos: filteredTodos,\n      });\n    }\n  };\n\n  selectFilterOptionHandler = (filter) => {\n    let filteredTodos = [];\n    switch (filter) {\n      case \"All\":\n        this.setState({\n          filteredTodos: null,\n          activeFilter: filter,\n        });\n        break;\n      case \"Active\":\n        filteredTodos = this.props.todos.filter(\n          (todo) => todo.isDone === false\n        );\n        this.setState({\n          filteredTodos: filteredTodos,\n          activeFilter: filter,\n        });\n        break;\n      case \"Completed\":\n        filteredTodos = this.props.todos.filter((todo) => todo.isDone === true);\n        this.setState({\n          filteredTodos: filteredTodos,\n          activeFilter: filter,\n        });\n        break;\n      default:\n        return;\n    }\n  };\n\n  toggleAllCheckboxesHandler = () => {\n    const todos = [...this.props.todos];\n    const checkboxBoolean = this.state.checkboxBoolean;\n    const updatedTodos = todos.map((todo) =>\n      todo.isDone === (checkboxBoolean === true ? true : false)\n        ? { ...todo, isDone: checkboxBoolean === true ? false : true }\n        : todo\n    );\n    this.setState({\n      checkboxBoolean: !this.state.checkboxBoolean,\n    });\n    this.props.updateTodoList(updatedTodos);\n  };\n\n  componentDidMount() {\n    this.props.fetchTodos();\n  }\n\n  render() {\n    return (\n      <TodoDashboard\n        todos={this.props.todos}\n        todoInput={this.state.todoInput}\n        editedContent={this.state.editedContent}\n        editingTodoList={this.state.editingTodoList}\n        filters={this.state.filters}\n        activeFilter={this.state.activeFilter}\n        filteredTodos={this.state.filteredTodos}\n        onAddTodo={(e) => this.addTodoHandler(e, this.state.todoInput)}\n        onClearCompletedTodos={this.clearCompletedTodos}\n        onUpdateTodo={this.updateTodoHandler}\n        onDeleteTodo={this.deleteTodoHandler}\n        onEditTodo={this.editTodoHandler}\n        onInputChanged={this.inputChangedHandler}\n        onToggleAllCheckboxes={this.toggleAllCheckboxesHandler}\n        onSelectFilterOption={this.selectFilterOptionHandler}\n        onSubmitEdit={this.submitEditHandler}\n        onUpdateFilteredTodos={this.updateFilteredTodosHandler}\n      />\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  fetchTodos,\n  addTodo,\n  updateTodo,\n  deleteTodo,\n  setTodoEditState,\n  updateTodoList,\n};\nconst mapStateToProps = (state) => ({\n  todos: state.todos.todoList,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);\n","import './css/style.css';\nimport Todos from \"./containers/Todos/Todos\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Todos />\n    </div>\n  );\n}\n\nexport default App;\n","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties\n  }\n}","import * as actionType from \"../actions/actionTypes\";\nimport { updateObject } from \"../../shared/updateObject\";\n\nconst initialState = {\n  loading: false,\n  error: false,\n  todoList: [],\n  filteredTodos: []\n};\n\nconst addNewTodoToList = (state, action) => {\n  const newTodo = action.todo;\n  return updateObject(state, {\n    todoList: [newTodo, ...state.todoList],\n    loading: false,\n  });\n};\n\nconst deleteTodo = (state, action) => {\n  const updatedTodoList = state.todoList.filter(\n    (todo) => todo.id !== action.id\n  );\n  return updateObject(state, {\n    todoList: updatedTodoList,\n  });\n};\n\nconst updateTodo = (state, action) => {\n  const updatedTodoList = state.todoList.map((todo) =>\n    todo.id === action.updatedTodo.id ? action.updatedTodo : todo\n  );\n\n  return updateObject(state, {\n    todoList: updatedTodoList,\n  });\n};\n\nconst fetchTodosStart = (state, action) => {\n  return updateObject(state, { loading: true });\n};\n\nconst fetchTodosSuccess = (state, action) => {\n  return updateObject(state, { todoList: action.todos, loading: false });\n};\n\nconst fetchTodosFail = (state, action) => {\n  return updateObject(state, { error: action.error, loading: false });\n};\n\nconst todoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionType.ADD_NEW_TODO_TO_LIST:\n      return addNewTodoToList(state, action);\n    case actionType.UPDATE_TODO:\n      return updateTodo(state, action);\n    case actionType.DELETE_TODO:\n      return deleteTodo(state, action);\n    case actionType.FETCH_TODOS_START:\n      return fetchTodosStart(state, action);\n    case actionType.FETCH_TODOS_SUCCESS:\n      return fetchTodosSuccess(state, action);\n    case actionType.FETCH_TODOS_FAIL:\n      return fetchTodosFail(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;\n","import { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport todos from \"./reducers/todos\";\n\nconst reducer = combineReducers({\n  todos\n});\n\nlet store;\nconst initialState = {};\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV === \"production\") {\n  store = createStore(\n    reducer,\n    initialState,\n    compose(applyMiddleware(...middleware))\n  );\n} else {\n  store = createStore(\n    reducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware),\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n}\n\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst app = (\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\nreportWebVitals();\n"],"sourceRoot":""}